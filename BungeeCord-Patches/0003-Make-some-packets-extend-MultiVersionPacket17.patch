From 1c58c865680b51bfc54031fa4422aa10513f4cda Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Sat, 2 Sep 2017 16:42:10 -0700
Subject: [PATCH] Make some packets extend MultiVersionPacket17


diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Chat.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Chat.java
index 95ad39b7..1f78125a 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Chat.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Chat.java
@@ -1,6 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
-import net.md_5.bungee.protocol.DefinedPacket;
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -13,7 +13,7 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class Chat extends DefinedPacket
+public class Chat extends MultiVersionPacketV17
 {
 
     private String message;
@@ -24,6 +24,14 @@ public class Chat extends DefinedPacket
         this( message, (byte) 0 );
     }
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        message = readString( buf );
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -34,6 +42,14 @@ public class Chat extends DefinedPacket
         }
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        writeString( message, buf );
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ClientSettings.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ClientSettings.java
index 5c79727c..431b2eb8 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ClientSettings.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ClientSettings.java
@@ -1,5 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import net.md_5.bungee.protocol.DefinedPacket;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
@@ -13,7 +14,7 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class ClientSettings extends DefinedPacket
+public class ClientSettings extends MultiVersionPacketV17
 {
 
     private String locale;
@@ -24,6 +25,19 @@ public class ClientSettings extends DefinedPacket
     private byte skinParts;
     private int mainHand;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        locale = readString( buf );
+        viewDistance = buf.readByte();
+        chatFlags = buf.readUnsignedByte();
+        chatColours = buf.readBoolean();
+        skinParts = buf.readByte();
+        difficulty = buf.readByte();
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -58,6 +72,19 @@ public class ClientSettings extends DefinedPacket
         }
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        writeString( locale, buf );
+        buf.writeByte( viewDistance );
+        buf.writeByte( chatFlags );
+        buf.writeBoolean( chatColours );
+        buf.writeByte( skinParts );
+        buf.writeByte( difficulty );
+    }
+    // Travertine end
+
     @Override
     public void handle(AbstractPacketHandler handler) throws Exception
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/EncryptionRequest.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/EncryptionRequest.java
index a29524ca..8d9f4ccb 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/EncryptionRequest.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/EncryptionRequest.java
@@ -1,25 +1,35 @@
 package net.md_5.bungee.protocol.packet;
 
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.NoArgsConstructor;
 import net.md_5.bungee.protocol.AbstractPacketHandler;
-import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
 
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class EncryptionRequest extends DefinedPacket
+public class EncryptionRequest extends MultiVersionPacketV17
 {
 
     private String serverId;
     private byte[] publicKey;
     private byte[] verifyToken;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        serverId = readString( buf );
+        publicKey = v17readArray( buf );
+        verifyToken = v17readArray( buf );
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -28,6 +38,16 @@ public class EncryptionRequest extends DefinedPacket
         verifyToken = readArray( buf );
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        writeString( serverId, buf );
+        v17writeArray( publicKey, buf, false );
+        v17writeArray( verifyToken, buf, false );
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/EncryptionResponse.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/EncryptionResponse.java
index 06676e42..19a85492 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/EncryptionResponse.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/EncryptionResponse.java
@@ -1,6 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
-import net.md_5.bungee.protocol.DefinedPacket;
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -13,12 +13,21 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class EncryptionResponse extends DefinedPacket
+public class EncryptionResponse extends MultiVersionPacketV17
 {
 
     private byte[] sharedSecret;
     private byte[] verifyToken;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        sharedSecret = v17readArray( buf );
+        verifyToken = v17readArray( buf );
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -26,6 +35,15 @@ public class EncryptionResponse extends DefinedPacket
         verifyToken = readArray( buf, 128 );
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        v17writeArray( sharedSecret, buf, false );
+        v17writeArray( verifyToken, buf, false );
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/KeepAlive.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/KeepAlive.java
index 0960b7d8..253a3ecd 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/KeepAlive.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/KeepAlive.java
@@ -1,6 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
-import net.md_5.bungee.protocol.DefinedPacket;
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -13,17 +13,33 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class KeepAlive extends DefinedPacket
+public class KeepAlive extends MultiVersionPacketV17
 {
 
     private int randomId;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        randomId = buf.readInt();
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
         randomId = readVarInt( buf );
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        buf.writeInt( randomId );
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/PlayerListItem.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PlayerListItem.java
index 9983ef2e..ae5dad52 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/PlayerListItem.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PlayerListItem.java
@@ -1,5 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import net.md_5.bungee.protocol.DefinedPacket;
 import io.netty.buffer.ByteBuf;
 import lombok.Data;
@@ -13,12 +14,24 @@ import java.util.UUID;
 @Data
 @NoArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class PlayerListItem extends DefinedPacket
+public class PlayerListItem extends MultiVersionPacketV17
 {
 
     private Action action;
     private Item[] items;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        items = new Item[ 1 ];
+        Item item = items[ 0 ] = new Item();
+        item.displayName = item.username = readString( buf );
+        action = !buf.readBoolean() ? Action.REMOVE_PLAYER : Action.ADD_PLAYER;
+        item.ping = buf.readShort();
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -73,6 +86,17 @@ public class PlayerListItem extends DefinedPacket
         }
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        Item item = items[0]; // Only one at a time
+        writeString( item.displayName, buf ); // TODO: Server unique only!
+        buf.writeBoolean( action != Action.REMOVE_PLAYER );
+        buf.writeShort( item.ping );
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/PluginMessage.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PluginMessage.java
index 6dcdece5..b3d806a2 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/PluginMessage.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PluginMessage.java
@@ -2,7 +2,7 @@ package net.md_5.bungee.protocol.packet;
 
 import com.google.common.base.Preconditions;
 import com.google.common.base.Predicate;
-import net.md_5.bungee.protocol.DefinedPacket;
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import java.io.ByteArrayInputStream;
 import java.io.DataInput;
@@ -18,7 +18,7 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class PluginMessage extends DefinedPacket
+public class PluginMessage extends MultiVersionPacketV17
 {
 
     public static final Predicate<PluginMessage> SHOULD_RELAY = new Predicate<PluginMessage>()
@@ -38,6 +38,15 @@ public class PluginMessage extends DefinedPacket
      */
     private boolean allowExtendedPacket = false;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        tag = readString( buf );
+        data = v17readArray( buf );
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -48,6 +57,15 @@ public class PluginMessage extends DefinedPacket
         buf.readBytes( data );
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        writeString( tag, buf );
+        v17writeArray( data, buf, allowExtendedPacket );
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
index ef9b8cf6..43af3189 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
@@ -1,6 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
-import net.md_5.bungee.protocol.DefinedPacket;
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -13,7 +13,7 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class ScoreboardObjective extends DefinedPacket
+public class ScoreboardObjective extends MultiVersionPacketV17
 {
 
     private String name;
@@ -24,6 +24,16 @@ public class ScoreboardObjective extends DefinedPacket
      */
     private byte action;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        name = readString( buf );
+        value = readString( buf );
+        action = buf.readByte();
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -36,6 +46,16 @@ public class ScoreboardObjective extends DefinedPacket
         }
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        writeString( name, buf );
+        writeString( value, buf );
+        buf.writeByte( action );
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
index 6f0de535..b967f89f 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
@@ -1,6 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
-import net.md_5.bungee.protocol.DefinedPacket;
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -13,7 +13,7 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class ScoreboardScore extends DefinedPacket
+public class ScoreboardScore extends MultiVersionPacketV17
 {
 
     private String itemName;
@@ -24,6 +24,20 @@ public class ScoreboardScore extends DefinedPacket
     private String scoreName;
     private int value;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        itemName = readString( buf );
+        action = buf.readByte();
+        if ( action != 1 )
+        {
+            scoreName = readString( buf );
+            value = buf.readInt();
+        }
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -36,6 +50,20 @@ public class ScoreboardScore extends DefinedPacket
         }
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        writeString( itemName, buf );
+        buf.writeByte( action );
+        if ( action != 1 )
+        {
+            writeString( scoreName, buf );
+            buf.writeInt( value );
+        }
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/TabCompleteRequest.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/TabCompleteRequest.java
index e3bcbc33..7634ebfd 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/TabCompleteRequest.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/TabCompleteRequest.java
@@ -1,6 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
-import net.md_5.bungee.protocol.DefinedPacket;
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -13,7 +13,7 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class TabCompleteRequest extends DefinedPacket
+public class TabCompleteRequest extends MultiVersionPacketV17
 {
 
     private String cursor;
@@ -21,6 +21,14 @@ public class TabCompleteRequest extends DefinedPacket
     private boolean hasPositon;
     private long position;
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        cursor = readString( buf );
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -36,6 +44,14 @@ public class TabCompleteRequest extends DefinedPacket
         }
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        writeString( cursor, buf );
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
index b4705799..da1066cc 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
@@ -1,6 +1,6 @@
 package net.md_5.bungee.protocol.packet;
 
-import net.md_5.bungee.protocol.DefinedPacket;
+import io.github.waterfallmc.travertine.protocol.MultiVersionPacketV17;
 import io.netty.buffer.ByteBuf;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -13,7 +13,7 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
-public class Team extends DefinedPacket
+public class Team extends MultiVersionPacketV17
 {
 
     private String name;
@@ -39,6 +39,31 @@ public class Team extends DefinedPacket
         this.mode = 1;
     }
 
+    // Travertine start
+    @Override
+    public void v17Read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        name = readString( buf );
+        mode = buf.readByte();
+        if ( mode == 0 || mode == 2 )
+        {
+            displayName = readString( buf );
+            prefix = readString( buf );
+            suffix = readString( buf );
+            friendlyFire = buf.readByte();
+        }
+        if ( mode == 0 || mode == 3 || mode == 4 )
+        {
+            int len = buf.readShort();
+            players = new String[ len ];
+            for ( int i = 0; i < len; i++ )
+            {
+                players[i] = readString( buf );
+            }
+        }
+    }
+    // Travertine end
+
     @Override
     public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
@@ -68,6 +93,30 @@ public class Team extends DefinedPacket
         }
     }
 
+    // Travertine start
+    @Override
+    public void v17Write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        writeString( name, buf );
+        buf.writeByte( mode );
+        if ( mode == 0 || mode == 2 )
+        {
+            writeString( displayName, buf );
+            writeString( prefix, buf );
+            writeString( suffix, buf );
+            buf.writeByte( friendlyFire );
+        }
+        if ( mode == 0 || mode == 3 || mode == 4 )
+        {
+            buf.writeShort( players.length );
+            for ( String player : players )
+            {
+                writeString( player, buf );
+            }
+        }
+    }
+    // Travertine end
+
     @Override
     public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
     {
-- 
2.11.0 (Apple Git-81)

