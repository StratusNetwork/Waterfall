From e455bc85b117a7c1341f4ceeb93a8b2cb89f7cc9 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Thu, 4 Feb 2016 04:59:17 -0500
Subject: [PATCH] Implement minecraft-api


diff --git a/api/src/main/java/net/md_5/bungee/api/CommandSender.java b/api/src/main/java/net/md_5/bungee/api/CommandSender.java
index a35b3fd0..798ca60d 100644
--- a/api/src/main/java/net/md_5/bungee/api/CommandSender.java
+++ b/api/src/main/java/net/md_5/bungee/api/CommandSender.java
@@ -1,28 +1,11 @@
 package net.md_5.bungee.api;
 
-import net.md_5.bungee.api.chat.BaseComponent;
-
 import java.util.Collection;
 
-public interface CommandSender
+public interface CommandSender extends tc.oc.minecraft.api.command.CommandSender
 {
 
     /**
-     * Get the unique name of this command sender.
-     *
-     * @return the senders username
-     */
-    public String getName();
-
-    /**
-     * Send a message to this sender.
-     *
-     * @param message the message to send
-     */
-    @Deprecated
-    public void sendMessage(String message);
-
-    /**
      * Send several messages to this sender. Each message will be sent
      * separately.
      *
@@ -32,20 +15,6 @@ public interface CommandSender
     public void sendMessages(String... messages);
 
     /**
-     * Send a message to this sender.
-     *
-     * @param message the message to send
-     */
-    public void sendMessage(BaseComponent... message);
-
-    /**
-     * Send a message to this sender.
-     *
-     * @param message the message to send
-     */
-    public void sendMessage(BaseComponent message);
-
-    /**
      * Get all groups this user is part of. This returns an unmodifiable
      * collection.
      *
@@ -68,14 +37,6 @@ public interface CommandSender
     public void removeGroups(String... groups);
 
     /**
-     * Checks if this user has the specified permission node.
-     *
-     * @param permission the node to check
-     * @return whether they have this node
-     */
-    public boolean hasPermission(String permission);
-
-    /**
      * Set a permission node for this user.
      *
      * @param permission the node to set
diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
index 20e2045d..8b02ebab 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
@@ -16,7 +16,7 @@ import net.md_5.bungee.api.connection.ProxiedPlayer;
 import net.md_5.bungee.api.plugin.Plugin;
 import net.md_5.bungee.api.scheduler.TaskScheduler;
 
-public abstract class ProxyServer
+public abstract class ProxyServer implements tc.oc.minecraft.api.server.LocalServer
 {
 
     @Getter
@@ -87,6 +87,18 @@ public abstract class ProxyServer
      */
     public abstract ProxiedPlayer getPlayer(UUID uuid);
 
+    @Override
+    public ProxiedPlayer getPlayerExact(String name)
+    {
+        return getPlayer( name );
+    }
+
+    @Override
+    public Collection<ProxiedPlayer> getOnlinePlayers()
+    {
+        return getPlayers();
+    }
+
     /**
      * Return all servers registered to this proxy, keyed by name. Unlike the
      * methods in {@link ConfigurationAdapter#getServers()}, this will not
diff --git a/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java b/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
index e9f1ff66..74b2791d 100644
--- a/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
+++ b/api/src/main/java/net/md_5/bungee/api/config/ServerInfo.java
@@ -10,7 +10,7 @@ import net.md_5.bungee.api.connection.ProxiedPlayer;
 /**
  * Class used to represent a server to connect to.
  */
-public interface ServerInfo
+public interface ServerInfo extends tc.oc.minecraft.api.server.Server
 {
 
     /**
diff --git a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
index 16cfff8b..c3769326 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
@@ -2,7 +2,7 @@ package net.md_5.bungee.api.connection;
 
 import java.util.Locale;
 import java.util.Map;
-import java.util.UUID;
+
 import net.md_5.bungee.api.Callback;
 import net.md_5.bungee.api.ChatMessageType;
 import net.md_5.bungee.api.CommandSender;
@@ -15,7 +15,7 @@ import net.md_5.bungee.api.config.ServerInfo;
  * Represents a player who's connection is being connected to somewhere else,
  * whether it be a remote or embedded server.
  */
-public interface ProxiedPlayer extends Connection, CommandSender
+public interface ProxiedPlayer extends Connection, CommandSender, tc.oc.minecraft.api.entity.Player
 {
 
     /**
@@ -158,13 +158,6 @@ public interface ProxiedPlayer extends Connection, CommandSender
     String getUUID();
 
     /**
-     * Get this connection's UUID, if set.
-     *
-     * @return the UUID
-     */
-    UUID getUniqueId();
-
-    /**
      * Gets this player's locale.
      *
      * @return the locale
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/Listener.java b/api/src/main/java/net/md_5/bungee/api/plugin/Listener.java
index 31ed4eea..a4797ad7 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/Listener.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/Listener.java
@@ -3,6 +3,6 @@ package net.md_5.bungee.api.plugin;
 /**
  * Dummy interface which all event subscribers and listeners must implement.
  */
-public interface Listener
+public interface Listener extends tc.oc.minecraft.api.event.Listener
 {
 }
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/Plugin.java b/api/src/main/java/net/md_5/bungee/api/plugin/Plugin.java
index d9cc5870..5bc19f72 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/Plugin.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/Plugin.java
@@ -15,7 +15,7 @@ import net.md_5.bungee.api.scheduler.GroupedThreadFactory;
  * Represents any Plugin that may be loaded at runtime to enhance existing
  * functionality.
  */
-public class Plugin
+public class Plugin implements tc.oc.minecraft.api.plugin.Plugin
 {
 
     @Getter
@@ -50,6 +50,12 @@ public class Plugin
     {
     }
 
+    @Override
+    public ProxyServer getServer()
+    {
+        return getProxy();
+    }
+
     /**
      * Gets the data folder where this plugin may store arbitrary data. It will
      * be a child of {@link ProxyServer#getPluginsFolder()}.
@@ -61,6 +67,12 @@ public class Plugin
         return new File( getProxy().getPluginsFolder(), getDescription().getName() );
     }
 
+    @Override
+    public InputStream getResource(String name)
+    {
+        return getResourceAsStream( name );
+    }
+
     /**
      * Get a resource from within this plugins jar or container. Care must be
      * taken to close the returned stream.
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/PluginDescription.java b/api/src/main/java/net/md_5/bungee/api/plugin/PluginDescription.java
index ef12ae90..2568203b 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/PluginDescription.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/PluginDescription.java
@@ -1,8 +1,12 @@
 package net.md_5.bungee.api.plugin;
 
 import java.io.File;
+import java.util.Collections;
 import java.util.HashSet;
+import java.util.List;
 import java.util.Set;
+
+import com.google.common.collect.ImmutableList;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
@@ -13,7 +17,7 @@ import lombok.NoArgsConstructor;
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
-public class PluginDescription
+public class PluginDescription implements tc.oc.minecraft.api.plugin.PluginDescription
 {
 
     /**
@@ -48,4 +52,22 @@ public class PluginDescription
      * Optional description.
      */
     private String description = null;
+
+    @Override
+    public List<String> getAuthors()
+    {
+        return Collections.singletonList( author );
+    }
+
+    @Override
+    public List<String> getDepend()
+    {
+        return ImmutableList.copyOf( getDepends() );
+    }
+
+    @Override
+    public List<String> getSoftDepend()
+    {
+        return ImmutableList.copyOf( getSoftDepends() );
+    }
 }
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
index bb285b1b..4beedefa 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
@@ -37,7 +37,7 @@ import org.yaml.snakeyaml.introspector.PropertyUtils;
  * example event handling and plugin management.
  */
 @RequiredArgsConstructor
-public class PluginManager
+public class PluginManager implements tc.oc.minecraft.api.plugin.PluginManager
 {
 
     private static final Pattern argsSplit = Pattern.compile( " " );
@@ -192,6 +192,12 @@ public class PluginManager
         return plugins.values();
     }
 
+    @Override
+    public Collection<? extends Plugin> getAllPlugins()
+    {
+        return getPlugins();
+    }
+
     /**
      * Returns a loaded plugin identified by the specified name.
      *
@@ -388,6 +394,24 @@ public class PluginManager
         return event;
     }
 
+    @Override
+    public void registerListener(tc.oc.minecraft.api.plugin.Plugin plugin, tc.oc.minecraft.api.event.Listener listener)
+    {
+        registerListener( (Plugin) plugin, (Listener) listener );
+    }
+
+    @Override
+    public void unregisterListener(tc.oc.minecraft.api.event.Listener listener)
+    {
+        unregisterListener( (Listener) listener );
+    }
+
+    @Override
+    public void unregisterListeners(tc.oc.minecraft.api.plugin.Plugin plugin)
+    {
+        unregisterListeners( (Plugin) plugin );
+    }
+
     /**
      * Register a {@link Listener} for receiving called events. Methods in this
      * Object which wish to receive events must be annotated with the
diff --git a/config/src/main/java/net/md_5/bungee/config/Configuration.java b/config/src/main/java/net/md_5/bungee/config/Configuration.java
index 78822dc5..a36cc0f4 100644
--- a/config/src/main/java/net/md_5/bungee/config/Configuration.java
+++ b/config/src/main/java/net/md_5/bungee/config/Configuration.java
@@ -7,12 +7,14 @@ import java.util.Collections;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
+import lombok.Getter;
 
-public final class Configuration
+public final class Configuration implements tc.oc.minecraft.api.configuration.Configuration
 {
 
     private static final char SEPARATOR = '.';
     final Map<String, Object> self;
+    @Getter
     private final Configuration defaults;
 
     public Configuration()
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 4a276b82..8ce6c464 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -628,6 +628,11 @@ public class BungeeCord extends ProxyServer
     }
 
     @Override
+    public tc.oc.minecraft.api.command.ConsoleCommandSender getConsoleSender() {
+        return ConsoleCommandSender.getInstance();
+    }
+
+    @Override
     public CommandSender getConsole()
     {
         return ConsoleCommandSender.getInstance();
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java b/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
index 1dd0aeba..f8699d26 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeServerInfo.java
@@ -13,6 +13,8 @@ import java.util.Collections;
 import java.util.HashSet;
 import java.util.LinkedList;
 import java.util.Queue;
+import java.util.UUID;
+
 import lombok.Getter;
 import lombok.RequiredArgsConstructor;
 import lombok.Synchronized;
@@ -70,6 +72,32 @@ public class BungeeServerInfo implements ServerInfo
     }
 
     @Override
+    public Collection<? extends ProxiedPlayer> getOnlinePlayers()
+    {
+        return getPlayers();
+    }
+
+    @Override
+    public ProxiedPlayer getPlayerExact(String name)
+    {
+        for(ProxiedPlayer player : getPlayers())
+        {
+            if(name.equalsIgnoreCase(player.getName())) return player;
+        }
+        return null;
+    }
+
+    @Override
+    public ProxiedPlayer getPlayer(UUID id)
+    {
+        for(ProxiedPlayer player : getPlayers())
+        {
+            if(id.equals(player.getUniqueId())) return player;
+        }
+        return null;
+    }
+
+    @Override
     public boolean canAccess(CommandSender player)
     {
         Preconditions.checkNotNull( player, "player" );
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index 188db1e7..5133eefe 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -588,9 +588,13 @@ public final class UserConnection implements ProxiedPlayer
     }
 
     @Override
-    public ProxiedPlayer.MainHand getMainHand()
+    public ProxiedPlayer.MainHand getMainHand() {
+        return (settings == null || settings.getMainHand() == 1) ? ProxiedPlayer.MainHand.RIGHT : ProxiedPlayer.MainHand.LEFT;
+    }
+
+    public Locale getCurrentLocale()
     {
-        return ( settings == null || settings.getMainHand() == 1 ) ? ProxiedPlayer.MainHand.RIGHT : ProxiedPlayer.MainHand.LEFT;
+        return getLocale();
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/command/ConsoleCommandSender.java b/proxy/src/main/java/net/md_5/bungee/command/ConsoleCommandSender.java
index 49dde16f..326e89ab 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/ConsoleCommandSender.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/ConsoleCommandSender.java
@@ -10,7 +10,7 @@ import net.md_5.bungee.api.chat.BaseComponent;
 /**
  * Command sender representing the proxy console.
  */
-public class ConsoleCommandSender implements CommandSender
+public class ConsoleCommandSender implements CommandSender, tc.oc.minecraft.api.command.ConsoleCommandSender
 {
 
     @Getter
-- 
2.11.0 (Apple Git-81)

